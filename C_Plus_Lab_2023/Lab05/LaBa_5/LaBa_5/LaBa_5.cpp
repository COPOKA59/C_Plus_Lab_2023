#define _CRT_SECURE_NO_WARNINGS
#include <conio.h> // Подключаем заголовочный файл с описанием функции getch
#include <stdio.h> // Подключаем заголовочный файл с описанием функции printf
#include <locale.h> // Подключаем заголовочный файл с описанием функции setlocale
#include <iostream>
// Константы
#define NMAX 100
#define NMIN -100

/* Лабораторная работа № 5, Вариант 13;
   Макарова Полина, 2 курс, гр. ПМИ-2 */

   /* Вариант 13 >
        Разработать программу для работы с двумерным массивом размером NxN
        (N = 9) из следующего списка. Вариант задания выдает преподаватель. Добавить в
        программу выбор способа заполнения массива (случайными числами или с шагом
        K), меню, а также возможность повторных вычислений.

        Для получения максимального балла:

        – добавить в программу возможность задавать размер массива (N) в
        программе и выделять память под двумерный массив динамически;

        – ввод данных в массив, отображение и обработку массива оформить в виде
        функций;

        – добавить в программу вывод на дисплей адресов переменных и массивов.


        13. Заполнить двумерный массив размером NxN по
        возрастанию строк и столбцов или случайными числами. На
        главной диагонали разместить суммы элементов, которые
        лежат в той же строке и том же столбце.

   */

   // Функция заполнения массива случайными числами (или
   // Функция заполнения массива числами по порядку от x1 с шагом k)
void Array_of_random_numbers(int** Array, int N)
{
    short i, j;
    for (i = 0; i < N; i++)     // перебор строк
        for (j = 0; j < N; j++) // перебор столбцов
            Array[i][j] = (float)rand() / RAND_MAX * (NMAX - NMIN) + NMIN;
}

// Функция заполнения массива по возрастанию строк
void Filling_in_ascending_rows(int** Array, int N)
{
    short i, j;
    for (i = 0; i < N; i++)     // перебор строк
        for (j = 0; j < N; j++) // перебор столбцов
            Array[i][j] = 1; // *N + j + 1;
}


// Функция отображения массива
void ViewArray(int** Array, int N)
{
    short i, j;
    printf("\n     Вывод двумерного массива:\n\n");
    for (i = 0; i < N; i++)
    {
        for (j = 0; j < N; j++)
            printf("  %4d", Array[i][j]); // Обращ. к элем. по индексам
        printf("\n");
    }
}

// Функция обработки массива ( На главной 
//     диагонали разместить суммы элементов, которые
//     лежат в той же строке и том же столбце. )
void Array_processing_function(int** Array, int N)
{
    short i, j;
    for (i = 0; i < N; i++)     // перебор главной диагонали
    {
        // Присваивания суммы ячейки по главной диагонали
        Array[i][i] = 0; // Надо считать сумму самой ячейки?

        // Сложение чисел по горизонтали
        for (j = 0; j < N; j++)
            if (i != j)
                Array[i][i] += Array[i][j];
        // Сложение чисел по вертикали
        for (j = 0; j < N; j++)
            if (i != j)
                Array[i][i] += Array[j][i];
    }
}

// Функция вывода на дисплей адресов переменных и массивов
void ViewArrayAdress(int** Array, int N)
{
    printf("\n     Адреса переменных и массива:\n");
    short i;
    printf("   Array = %p\n", Array);
    for (i = 0; i < N; i++)
        printf("  Array[%d] = %p, address Array[%d] = %p\n",
            i, Array[i], i, &Array[i]);
}
// Функция удаления массива
void DeleteArray(int** Array, int N)
{
    short i;
    for (i = 0; i < N; i++)  // Для каждой строки
        delete[] Array[i];   // освобождаем память, выделенную
    // под массив int,
    delete[] Array; // освобождаем память, выделенную
    // под массив указателей на строки
}


int main()
{
    setlocale(LC_ALL, "Russian"); // Смена кодировки
    printf(" |   Макарова Полина, 2 курс, гр. ПМИ-2   |\n");
    printf(" |   Лабораторная работа № 5, Вариант 13  |\n");

    short i, j;
    char key;
    // Размер массива N
    int N, z;
    printf("\nВведите размер целочисленного двумерного массива: ");
    scanf("%d", &N);

    // Динамически выделяем память под
    // массив указателей на строки
    int** Array = new int* [N];
    for (i = 0; i < N; i++)     // Затем для каждой строки
        Array[i] = new int[N];  // динамически выделяем память
    // под массив int

// Адреса переменных и массива
    ViewArrayAdress(Array, N);

    do // Цикл для организации повторных вычислений
    {
        //Меню
        printf("\n\n  Чтобы заполнить массив случайными числами введите 1\n  Чтобы заполнить массива по возрастанию строк 2\n    Для завершения программы введите любое другое число\n");
        scanf("%d", &z);
        if (z == 1) {
            // Функция заполнения массива случайными числами
            Array_of_random_numbers(Array, N);
        }
        else if (z == 2) {
            // Функция заполнения массива по возрастанию строк
            Filling_in_ascending_rows(Array, N);
        }
        else
        {
            // Выход из цикла
            break;
        }


        // Вывод массива
        ViewArray(Array, N);
        // Функция обработки массива
        printf("\n\n    Массив после обработки:\n");
        Array_processing_function(Array, N);
        ViewArray(Array, N);

        // Повтор ввода данных
        printf("\nПовторить (y/n)? \n\n");
        key = _getch();
    } while (key == 'y'); // Повторяем, пока нажата ‘y’

    // Удаление массива
    DeleteArray(Array, N);
}