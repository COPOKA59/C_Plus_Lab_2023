#define _CRT_SECURE_NO_WARNINGS
#include <conio.h> // Подключаем заголовочный файл с описанием функции getch
#include <stdio.h> // Подключаем заголовочный файл с описанием функции printf
#include <locale.h> // Подключаем заголовочный файл с описанием функции setlocale
#include <iostream>
#include <cstdlib>

#define NMAX 20//65536
#define NMIN 0

/* Лабораторная работа № 7, Вариант 13;
   Макарова Полина, 2 курс, гр. ПМИ-2 */

   /* Вариант 13 >
       Написать программу в соответствии с заданным вариантом. 
   Программа должна быть написана с использованием функций. Вариант 
   задания выдает преподаватель. Для получения максимального балла нужно 
   выполнить следующие требования:  

    Размер массивов должен задаваться с клавиатуры и память 
   выделяться динамически. Программа должна повторяться ее до тех пор,
   пока не будет нажата клавиша ESC.  

    Содержимое массивов должно задаваться с клавиатуры или случайными 
   числами (по выбору пользователя) 
   
   Для минимального балла достаточно сделать статические массивы и 
   заполнить их случайными числами.

        13.  В массиве положительных целых двухбайтовых чисел подсчитать 
        для каждого элемента общее число битов в двоичной записи этого числа. 
        
        Удалить из массива элементы, у которых это посчитанное число битов 
        кратно 3, сдвинув все оставшиеся элементы к началу массива 
        (можно просто скопировать в другой массив). 
        
        Вывести массив в десятичном, шестнадцатеричном и двоичном форматах. 
        
        Программа должна содержать меню и позволять проводить повторные вычисления. 
        
        Все алгоритмы должны быть реализованы с помощью функций. 
        
        В программе необходимо задавать размер массива и выделять под него 
        память динамически. 
        
        Заполнять исходный массив двумя способами: случайными числами и 
        по порядку от x1 с шагом k. 
        
        Выводить массивы и другую информацию на дисплей.
   */

   // Функция заполнения массива случайными числами
void Array_of_random_numbers(unsigned short int* Array, int N) {
    int i;
    for (i = 0; i < N; i++)
        Array[i] = (float)rand() / RAND_MAX * (NMAX - NMIN) + NMIN;
}
// Функция заполнения массива числами по порядку от x1 с шагом k
void Array_of_numbers_in_increments(unsigned short int* Array, int N) {
    int k, x1, i;
    printf("\nВведите начальное значение массива 1: ");
    scanf("%d", &x1);
    printf("\nВведите шаг с которым заполнять массив 1: ");
    scanf("%d", &k);
    for (i = 0; i < N; i++)
        Array[i] = x1 + k * i;
}
// Функция подсчёта общего числа битов в двоичной записи числа
void Number_of_bits(unsigned short int* Array, int N) {
    int i;
    unsigned short k;
    for (i = 0; i < N; i++) {
        unsigned short mask = 0x8000; // 1000 0000 0000 0000  
        printf("Array[%d] = %d;  ", i, Array[i]);
        for (k = 0; k < 16; k++) {
            if ((Array[i] & mask) == 0) // Если очередной бит равен 0    
                mask >>= 1;      // сдвигаем маску   
            else         // если равен 1    
                break;  // выходим из цикла  
        }
        printf("mask = %d;\n", mask);
        Array[i] = 16 - k; // Эта разность и есть размер двоичной записи числа 
        printf("k = %d\n", i, Array[i]);
    }
}
// Функция удаления элемента, посчитанное число битов кратного 3.
// Смещение в массиве
void Delete_3bits() {

}


// Вывод массива
void ViewArray(unsigned short int* Array, int N) {
    int i;
    for (i = 0; i < N; i++)
        printf("%d ", Array[i]);
    printf("\n");
    // Вывод адреса массива
    //printf("Адресс массива = %p\n", Array); // Адрес массива
}

int main()
{
    setlocale(LC_ALL, "Russian"); // Смена кодировки
    //std::system("chcp 1251");
    printf(" |   Макарова Полина, 2 курс, гр. ПМИ-2   |\n");
    printf(" |   Лабораторная работа № 7, Вариант 13  |\n\n");

    char key;
    


    // Цикл для организации повторных вычислений
    do
    {
        // Размер массива N
        int N;
        printf("\nВведите размер целочисленного массива: ");
        scanf("%d", &N);

        // Массив положительных целых двухбайтовых чисел (Динамический, размер с клавиатуры)
        // Как мы должны строить массив? Это двумерный массив? 
        // В нём данные храняться в виде 10 системы счисления или двоичной?
        unsigned short int* Array1 = new unsigned short int[N];

        // Fun Заполнение массива случайными числами и по порядку
        Array_of_random_numbers(Array1, N);
        ViewArray(Array1, N);

        // Fun Подсчитать для каждого элемента общее число битов в двоичной записи этого числа
        // Подсчёт битов это подсчёт единиц в числе или размера?
        // Фун считающая размер:
        Number_of_bits(Array1, N);

        // Fun Удалить из массива элементы, поместить в новый массив оставшиеся

        // Fun Вывод массива в десятичном, шестнадцатеричном и двоичном форматах.



        // Повтор пока не нажата клавиша ESC !!!
        
        // Повтор ввода данных
        printf("\nПовторить (y/n)? \n\n");
        key = _getch();
    } while (key == 'y'); // Повторяем, пока нажата ‘y’
}